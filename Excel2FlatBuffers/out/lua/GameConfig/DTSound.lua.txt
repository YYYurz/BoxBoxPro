-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: GameConfig

local flatbuffers = require('3rd.flatbuffers')

local DTSound = {} -- the module
local DTSound_mt = {} -- the class metatable

function DTSound.New()
    local o = {}
    setmetatable(o, {__index = DTSound_mt})
    return o
end
function DTSound.GetRootAsDTSound(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = DTSound.New()
    o:Init(buf, n + offset)
    return o
end
function DTSound_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function DTSound_mt:Id()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Uint32, o + self.view.pos)
    end
    return 0
end
function DTSound_mt:SoundName()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DTSound_mt:SoundGroupName()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DTSound_mt:SoundPriority()
    local o = self.view:Offset(10)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Uint32, o + self.view.pos)
    end
    return 0
end
function DTSound_mt:Loop()
    local o = self.view:Offset(12)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Uint32, o + self.view.pos)
    end
    return 0
end
function DTSound_mt:SoundVolume()
    local o = self.view:Offset(14)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Float32, o + self.view.pos)
    end
    return 0.0
end
function DTSound_mt:AssetPath()
    local o = self.view:Offset(16)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function DTSound.Start(builder) builder:StartObject(7) end
function DTSound.AddId(builder, Id) builder:PrependUint32Slot(0, Id, 0) end
function DTSound.AddSoundName(builder, SoundName) builder:PrependUOffsetTRelativeSlot(1, SoundName, 0) end
function DTSound.AddSoundGroupName(builder, SoundGroupName) builder:PrependUOffsetTRelativeSlot(2, SoundGroupName, 0) end
function DTSound.AddSoundPriority(builder, SoundPriority) builder:PrependUint32Slot(3, SoundPriority, 0) end
function DTSound.AddLoop(builder, Loop) builder:PrependUint32Slot(4, Loop, 0) end
function DTSound.AddSoundVolume(builder, SoundVolume) builder:PrependFloat32Slot(5, SoundVolume, 0.0) end
function DTSound.AddAssetPath(builder, AssetPath) builder:PrependUOffsetTRelativeSlot(6, AssetPath, 0) end
function DTSound.End(builder) return builder:EndObject() end

return DTSound -- return the module