local LuaBehaviour = require "Common/LuaBehaviour"
local LuaCall = CS.Hr.LuaCallStatic

---@class UIBase : LuaBehaviour Lua层UI基类
local UIBase = LuaBehaviour:New()

function UIBase:OnCreate()
    self.UIListenerList = {}
    self.EventListenerList = {}
    self.tableLoadAsset = {}
end

function UIBase:OnOpen()
end

function UIBase:OnDestroy()
    for k, _v in pairs(self.UIListenerList) do
        k:RemoveAllListeners()
        k:Invoke()
    end
    self.EventListenerList = nil
    self.UIListenerList = nil
end

function UIBase:OnClose()
    for _, v in pairs(self.tableLoadAsset) do
        LuaCall.UnloadAsset(v)
    end
    self.tableLoadAsset = {}
end

--- 添加Unity UI组件的事件监听
function UIBase:AddListener(unityEventBase, func)
    unityEventBase.AddListener(unityEventBase, func)
    self.UIListenerList[unityEventBase] = 1
end

--- 添加Lua侧的Logic向UI发送的事件
function UIBase:AddEventListener(uiEventID, callBack)
    local callBackType = type(callBack)
    print("UIBase : AddEventListener callBack " .. callBackType)
    if type(callBack) ~= "function" then
        return
    end
    self.EventListenerList[uiEventID] = callBack
end

--- 接受到Logic发送的事件，触发回调
function UIBase:NotifyEvent(eventID, param)
    for k, v in pairs(self.EventListenerList) do
        if k == eventID then
            v()
        end
    end
end

function UIBase:AddLoadAsset(nAsset)
    table.insert(self.tableLoadAsset, nAsset)
end

return UIBase
